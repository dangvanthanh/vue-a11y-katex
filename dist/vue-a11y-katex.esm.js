var KatexMixin={props:{expression:{type:String,default:""}},computed:{_expression:function(){try{return katex.renderToString(this.expression,{throwOnError:!1})}catch(e){return e}}}}(function(){if("undefined"!=typeof document){var e=document.head||document.getElementsByTagName("head")[0],t=document.createElement("style");t.type="text/css",t.styleSheet?t.styleSheet.cssText="":t.appendChild(document.createTextNode("")),e.appendChild(t)}})(),InlineMath={render:function(){var e=this.$createElement;return(this._self._c||e)("span",{domProps:{innerHTML:this._s(this._expression)}})},staticRenderFns:[],name:"InlineMath",mixins:[KatexMixin]}(function(){if("undefined"!=typeof document){var e=document.head||document.getElementsByTagName("head")[0],t=document.createElement("style");t.type="text/css",t.styleSheet?t.styleSheet.cssText="":t.appendChild(document.createTextNode("")),e.appendChild(t)}})(),BlockMath={render:function(){var e=this.$createElement;return(this._self._c||e)("div",{domProps:{innerHTML:this._s(this._expression)}})},staticRenderFns:[],name:"BlockMath",mixins:[KatexMixin]},components={InlineMath:InlineMath,BlockMath:BlockMath},install=function(e,t){void 0===t&&(t={}),Object.values(components).forEach(function(t){e.component(t.name,t)})};"undefined"!=typeof window&&window.Vue&&install(window.Vue);var index=Object.assign({},components,{install:install});export default index;
